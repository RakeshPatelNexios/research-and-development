1Ô∏è‚É£ Register Service Worker in Main Script (main.js)
// This script registers the service worker and requests notification permission.

// Check if service workers and notifications are supported
if ('serviceWorker' in navigator && 'Notification' in window) {
    navigator.serviceWorker.register('/service-worker.js')
        .then(reg => console.log('Service Worker Registered!', reg))
        .catch(err => console.log('Service Worker Registration Failed!', err));

    // Request Notification Permission
    Notification.requestPermission().then(permission => {
        if (permission === "granted") {
            console.log("Notification permission granted.");
            startNotificationLoop();
        } else {
            console.log("User denied notifications.");
        }
    });
}

// Function to start sending notifications
function startNotificationLoop() {
    if (!localStorage.getItem("notificationStopped")) {
        navigator.serviceWorker.controller?.postMessage({ action: "startNotifications" });
    }
}

2Ô∏è‚É£ Implement the Service Worker (service-worker.js)
// This file handles the notification logic and stops sending notifications if the user interacts.

const notificationData = {
    notification_id: "cGEWAL",
    channel_type: "1",
    channel_id: "2690",
    "interruption-level": "active",
    click_action: "https://test.carecoordinations.com/home?type=139f1655&channel_type=1",
    web_token: "eDaGAwez7OfFT3g7en0qER:APA91bFKJvi5brsUSLLPJ5izVQI6QVHoTdDAHiL1tpI8zPhma5QQX0k2sdeKuPhQVWI1fbtbu1cP-9P0Z41k7z70RJTBKMMxbow9d4FCGzCqhlw6082s9g0",
    icon: "https://test.carecoordinations.com/app/front/images/logo/logo-smart-banner.png",
    title: "Michel P. Jha sent a new message.",
    branch_id: "31",
    remark: "QA system B Skill",
    fcm_id: "dhaeBDx5F04CsAsk2jV21l:APA91bGM0k0x7qaOBK5EYjngXrf3TEpEizWZLprNPghfDzy8hY5nejOU0G3vXKGTUas2BIqE4GjDj7_4__BEvFsEj_Pif_FhWgvWA2CEJ_Bv-vriTPY5pzo",
    body: "CHARLES SEYMOUR\nQA system B Skill",
    subtitle: "CHARLES SEYMOUR",
    sound: "https://test.carecoordinations.com/app/front/notification-sound/web.wav",
    type: "1",
    chat_id: "72015"
};

// Function to show notification
function showNotification() {
    self.registration.showNotification(notificationData.title, {
        body: notificationData.body,
        icon: notificationData.icon,
        data: { click_action: notificationData.click_action },
        tag: notificationData.notification_id, // Unique ID for grouping notifications
        renotify: true // Ensures repeated notifications replace the previous one
    });
}

// Background task for sending notifications every 2 minutes up to 10 minutes
let notificationInterval;
let notificationCount = 0;

self.addEventListener("message", event => {
    if (event.data.action === "startNotifications") {
        if (!notificationInterval) {
            notificationInterval = setInterval(() => {
                if (notificationCount < 5 && !localStorage.getItem("notificationStopped")) {
                    showNotification();
                    notificationCount++;
                } else {
                    clearInterval(notificationInterval);
                }
            }, 2 * 60 * 1000); // Every 2 minutes
        }
    }
});

// Listen for notification clicks
self.addEventListener("notificationclick", event => {
    event.notification.close();
    
    // Open the provided link
    event.waitUntil(
        clients.openWindow(event.notification.data.click_action)
    );

    // Stop future notifications
    localStorage.setItem("notificationStopped", "true");
    clearInterval(notificationInterval);
});

// Listen for notification close (if the user dismisses it)
self.addEventListener("notificationclose", () => {
    // Stop notifications if closed before 10 min
    localStorage.setItem("notificationStopped", "true");
    clearInterval(notificationInterval);
});


3Ô∏è‚É£ Explanation of the Code
üîπ What Happens Here?
  The main script (main.js):
      Registers the Service Worker.
      Requests Notification Permission.
      Starts the notification loop unless stopped.

  The Service Worker (service-worker.js):
      Sends notifications every 2 minutes (5 times max).
      Stops notifications if the user clicks or dismisses any notification.
      Uses localStorage to remember if notifications should stop.


4Ô∏è‚É£ Edge Cases Considered
‚úÖ What if the user denies notifications?
‚Üí The system won‚Äôt run and won‚Äôt show errors.

‚úÖ What if the user clicks on the notification?
‚Üí The system stops notifications immediately.

‚úÖ What if the user dismisses the notification?
‚Üí The system stops notifications immediately.

‚úÖ What if the browser is closed?
‚Üí The Service Worker runs in the background until the time is completed.

‚úÖ What if the user refreshes the page?
‚Üí The Service Worker checks localStorage and won‚Äôt restart notifications.

5Ô∏è‚É£ Final Summary
Feature	Implemented
Show notification every 2 minutes	        ‚úÖ
Stop after 10 minutes (5 times)	          ‚úÖ
Stop if user clicks the notification	    ‚úÖ
Stop if user dismisses the notification	  ‚úÖ
Persistent background execution	          ‚úÖ
Secure and optimized	                    ‚úÖ

Now, when a user visits the site, they‚Äôll get a notification every 2 minutes (up to 10 minutes) unless they interact with the notification. If they click or dismiss it, notifications stop immediately.
